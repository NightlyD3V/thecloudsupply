{% comment %}
/*============================================================================
* 2013-2018 Vinovathemes
* @author    Vinovathemes <vinovathemes@gmail.com>
* @copyright 2013-2018 Vinovathemes SA
==============================================================================*/
{% endcomment %}

/*================ Var RTL ================*/
$rtl-left : left;
$rtl-right : right;


$theme-color-default: {{ settings.theme_color_default }};
$theme-color-primary: {{ settings.theme_color_primary }};

/*================ Typography ================*/
{% if settings.type_base_family contains 'Google' %}
  {% assign type_base_parts = settings.type_base_family | split: '_' %}
  {% assign type_base_name = type_base_parts[1] %}
  {% capture base_family %}"{{ type_base_name | split: ':' | first | replace: '+', ' ' }}"{% if type_base_parts.last == 'serif' %}, serif {% else %}, "HelveticaNeue", "Helvetica Neue", sans-serif{% endif %}{% endcapture %}
{% else %}
  {% assign base_family = settings.type_base_family %}
{% endif %}

{% if settings.type_header_family contains 'Google' %}
  {% assign type_header_parts = settings.type_header_family | split: '_' %}
  {% assign type_header_name = type_header_parts[1] %}
  {% capture header_family %}"{{ type_header_name | split: ':' | first | replace: '+', ' ' }}"{% if type_header_parts.last == 'serif' %}, serif {% else %}, "HelveticaNeue", "Helvetica Neue", sans-serif{% endif %}{% endcapture %}
  {% assign header_weight = type_header_parts[2] | split: ',' %}
{% else %}
  {% assign header_family = settings.type_header_family %}
  {% assign header_weight = 400 %}
{% endif %}

$font-family-default: {{ base_family }};
$font-family-primary: {{ header_family }};

/*================ SASS HELPERS ================*/
@function em($pxval, $base: $font-size-base) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval / $base) * 1em;
}

@function strip-units($value) {
  @return ($value / ($value * 0 + 1));
}

/*================ Media Query Mixin ================*/
@mixin media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $grid-breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      $breakpoint-found: true;

      @media only screen and #{$declaration} {
        @content;
      }
    }
  }

  @if $breakpoint-found == false {
    @warn 'Breakpoint "#{$media-query}" does not exist';
  }
}

/*================ Mixxin Vinova ================*/
@mixin clearfix() {
  &::after {
    content: '';
    display: table;
    clear: both;
  }

  // sass-lint:disable no-misspelled-properties
  *zoom: 1;
}

@mixin prefix($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      -webkit-#{$property}: $value;
    } @else if $prefix == moz {
      -moz-#{$property}: $value;
    } @else if $prefix == ms {
      -ms-#{$property}: $value;
    } @else if $prefix == o {
      -o-#{$property}: $value;
    } @else if $prefix == spec {
      #{$property}: $value;
    } @else  {
      @warn 'Unrecognized prefix: #{$prefix}';
    }
  }
}

@mixin user-select($value: none) {
  @include prefix('user-select', #{$value}, moz ms webkit spec);
}

@mixin placeholder-text($color: $color-text-field-text, $opacity: 0.6) {
  color: $color;
  opacity: $opacity;
}

@mixin transform($transform) {
  @include prefix(transform, $transform, ms webkit spec);
}

@mixin visually-hidden() {
  // sass-lint:disable no-important
  position: absolute !important;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

@mixin css3-prefix($property, $value) {
  -webkit-#{$property}: #{$value};
     -moz-#{$property}: #{$value};
      -ms-#{$property}: #{$value};
       -o-#{$property}: #{$value};
          #{$property}: #{$value};
}

@mixin border-radius($radius: 5px) {
    @include css3-prefix('border-radius', $radius);
}

@mixin box-sizing($type: border-box) {
  @include css3-prefix('box-sizing', $type);
}

@mixin box-shadow($value) {
    @include css3-prefix('box-shadow', $value);
}

@mixin transition($properties...) {
  @if length($properties) >= 1 {
    @include css3-prefix('transition', $properties);
  }
  @else {
    @include css3-prefix('transition',  "all 0.2s ease-in-out 0s");
  }
}

@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
    text-shadow: $x $y $blur $color;
}

@mixin opacity($opacity: 0.5) {
    $opacityMultiplied: ($opacity * 100);
    filter:  alpha(opacity=$opacityMultiplied);
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $opacityMultiplied + ")";
    @include css3-prefix('opacity', $opacity);
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }

  &:-moz-placeholder {
    @content;
  }

  &::-moz-placeholder {
    @content;
  }

  &:-ms-input-placeholder {
    @content;
  }
}

@mixin square($x) {
  width: $x;
  height: $x;
}

@mixin size($x, $y) {
  width: $x;
  height: $y;
}


$rem-baseline: 10px !default;
$rem-fallback: true !default;
$rem-px-only: false !default;
@mixin border-arrow-top ($width, $height, $color){
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 $width/2 $height $width/2;
  border-color: transparent transparent $color transparent;
}
@mixin border-arrow-bottom ($width, $height, $color){
  width: 0;
  height: 0;
  border-style: solid;
  border-width: $height $width/2 0 $width/2;
  border-color: $color transparent transparent transparent;
}
@mixin border-arrow-right ($width, $height, $color){
  width: 0;
  height: 0;
  border-style: solid;
  border-width: $height/2 0 $height/2 $width;
  border-color: transparent transparent transparent $color;
}
@mixin border-arrow-left ($width, $height, $color){
  width: 0;
  height: 0;
  border-style: solid;
  border-width: $height/2 $width $height/2 0;
  border-color: transparent $color transparent transparent;
}
@function rem-separator($list, $separator: false) {
  @if $separator == "comma" or $separator == "space" {
    @return append($list, null, $separator);
  }

  @if function-exists("list-separator") == true {
    @return list-separator($list);
  }

  // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)
  $test-list: ();
  @each $item in $list {
    $test-list: append($test-list, $item, space);
  }

  @return if($test-list == $list, space, comma);
}

@mixin rem-baseline($zoom: 100%) {
  font-size: $zoom / 16px * $rem-baseline;
}

@function rem-convert($to, $values...) {
  $result: ();
  $separator: rem-separator($values);

  @each $value in $values {
    @if type-of($value) == "number" and unit($value) == "rem" and $to == "px" {
      $result: append($result, $value / 1rem * $rem-baseline + 0px, $separator);
    } @else if type-of($value) == "number" and unit($value) == "px" and $to == "rem" {
      $result: append($result, $value / $rem-baseline + 0rem, $separator);
    } @else if type-of($value) == "list" {
      $value-separator: rem-separator($value);
      $value: rem-convert($to, $value...);
      $value: rem-separator($value, $value-separator);
      $result: append($result, $value, $separator);
    } @else {
      $result: append($result, $value, $separator);
    }
  }

  @return if(length($result) == 1, nth($result, 1), $result);
}

@function rem($values...) {
  @if $rem-px-only {
    @return rem-convert(px, $values...);
  } @else {
    @return rem-convert(rem, $values...);
  }
}

@mixin rem($properties, $values...) {
  @if type-of($properties) == "map" {
    @each $property in map-keys($properties) {
      @include rem($property, map-get($properties, $property));
    }
  } @else {
    @each $property in $properties {
      @if $rem-fallback or $rem-px-only {
        #{$property}: rem-convert(px, $values...);
      }
      @if not $rem-px-only {
        #{$property}: rem-convert(rem, $values...);
      }
    }
  }
}

/* BOOTSTRAP 4 */
@mixin display($value) {
  @if $value == "flex" {
    // 2009
    display: -webkit-box;
    display: -moz-box;
    display: box;

    // 2012
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox; // 2011 (IE 10)
    display: flex;
  } @else if $value == "inline-flex" {
    display: -webkit-inline-box;
    display: -moz-inline-box;
    display: inline-box;

    display: -webkit-inline-flex;
    display: -moz-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
  } @else {
    display: $value;
  }
}

/* RIGHT TO LEFT */
@mixin rtl-base-simple ($property, $direction) {
  #{$property}:$direction;
  .lang-rtl & {
    @if $direction == $rtl-right {
      #{$property}:$rtl-left;
    }
    @else {
      #{$property}:$rtl-right;
    }
  }
}

@mixin rtl-base-inherit ($property, $direction, $value, $inherit : inherit) {
  #{$property}-#{$direction}: $value;
  .lang-rtl & {
    @if $direction == $rtl-right {
      #{$property}-#{$rtl-left}: $value;
    }
    @else {
      #{$property}-#{$rtl-right}: $value;
    }
    #{$property}-#{$direction}: $inherit;
  }
}

@mixin rtl-base-toprightbottomleft ($property, $t, $r, $b, $l) {
  #{$property}: $t $r $b $l;
  .lang-rtl & {
    #{$property}: $t $l $b $r;
  }
}

// BODY STYLES
@mixin rtl-direction ($forBody : true) {
  direction: ltr;
  @if $forBody {
    &.lang-rtl {
      direction: rtl;
    }
  }
  @else {
    .lang-rtl & {
      direction: rtl;
    }
  }
}

@mixin rtl-font-family ($ltr, $rtl, $forBody : false) {
  font-family: $ltr;
  @if $forBody {
    &.lang-rtl, &.non-latin {
      font-family:$rtl;
    }
  }
  @else {
    .lang-rtl &, .non-latin & {
      font-family:$rtl;
    }
  }
}

// MARGIN
@mixin rtl-margin ($t, $r, $b, $l) {
  @include rtl-base-toprightbottomleft(margin,$t, $r, $b, $l);
}
@mixin rtl-margin-left ($value) {
  @include rtl-base-inherit(margin,$rtl-left,$value);
}
@mixin rtl-margin-right ($value) {
  @include rtl-base-inherit(margin,$rtl-right,$value);
}

// PADDING
@mixin rtl-padding ($t, $r, $b, $l) {
  @include rtl-base-toprightbottomleft(padding,$t, $r, $b, $l);
}
@mixin rtl-padding-left ($value) {
  @include rtl-base-inherit(padding,$rtl-left,$value);
}
@mixin rtl-padding-right ($value) {
  @include rtl-base-inherit(padding,$rtl-right,$value);
}

// BORDER
@mixin rtl-border-left ($value) {
  @include rtl-base-inherit(border,$rtl-left,$value);
}
@mixin rtl-border-right ($value) {
  @include rtl-base-inherit(border,$rtl-right,$value);
}

// POSITION
@mixin rtl-left ($value) {
  #{$rtl-left}: $value;
  .lang-rtl & {
    #{$rtl-right}: $value;
    #{$rtl-left}: auto;
  }
}
@mixin rtl-right ($value) {
  #{$rtl-right}: $value;
  .lang-rtl & {
    #{$rtl-left}: $value;
    #{$rtl-right}: auto;
  }
}

// TEXT-ALIGN
@mixin rtl-text-align-left () {
  @include rtl-base-simple(text-align, $rtl-left);
}
@mixin rtl-text-align-right () {
  @include rtl-base-simple(text-align, $rtl-right);
}

// FLOAT
@mixin rtl-float-left () {
  @include rtl-base-simple(float, $rtl-left);
}
@mixin rtl-float-right () {
  @include rtl-base-simple(float, $rtl-right);
}
@mixin rtl-clear-left () {
  @include rtl-base-simple(clear, $rtl-left);
}
@mixin rtl-clear-right () {
  @include rtl-base-simple(clear, $rtl-right);
}

// BACKGROUND-POSITION
@mixin rtl-background-position-left ($vertical) {
  background-position:$rtl-left $vertical;
  .lang-rtl & {
    background-position:$rtl-right $vertical;
  }
}
@mixin rtl-background-position-right ($vertical) {
  background-position:$rtl-right $vertical;
  .lang-rtl & {
    background-position:$rtl-left $vertical;
  }
}

@mixin rtl-background-position-percent ($vertical, $horPercent) {
  background-position:$horPercent $vertical;
  .lang-rtl & {
    background-position:100% - $horPercent $vertical;
  }
}

// TEXT-SHADOW & BOX-SHADOW
@mixin rtl-text-shadow ($x, $rest) {
  text-shadow: $x $rest;
  .lang-rtl & {
    text-shadow: -1 * $x $rest;
  }
}
@mixin rtl-box-shadow ($x, $rest) {
  -moz-box-shadow: $x $rest;
  -webkit-box-shadow: $x $rest;
  box-shadow: $x $rest;
  .lang-rtl & {
    -moz-box-shadow: -1 * $x $rest;
    -webkit-box-shadow: -1 * $x $rest;
    box-shadow: -1 * $x $rest;
  }
}

// BORDER-RADIUS
@mixin rtl-border-radius-topright ($value) {
  -moz-border-radius-top#{$rtl-right}: $value;
  -webkit-border-top-#{$rtl-right}-radius: $value;
  border-top-#{$rtl-right}-radius: $value;
  .lang-rtl & {
    -moz-border-radius-top#{$rtl-left}: $value;
    -webkit-border-top-#{$rtl-left}-radius: $value;
    border-top-#{$rtl-left}-radius: $value;
    -moz-border-radius-top#{$rtl-right}: inherit;
    -webkit-border-top-#{$rtl-right}-radius: inherit;
    border-top-#{$rtl-right}-radius: inherit;
  }
}

@mixin rtl-border-radius-bottomright ($value) {
  -moz-border-radius-bottom#{$rtl-right}: $value;
  -webkit-border-bottom-#{$rtl-right}-radius: $value;
  border-bottom-#{$rtl-right}-radius: $value;
  .lang-rtl & {
    -moz-border-radius-bottom#{$rtl-left}: $value;
    -webkit-border-bottom-#{$rtl-left}-radius: $value;
    border-bottom-#{$rtl-left}-radius: $value;
    -moz-border-radius-bottom#{$rtl-right}: inherit;
    -webkit-border-bottom-#{$rtl-right}-radius: inherit;
    border-bottom-#{$rtl-right}-radius: inherit;
  }
}

@mixin rtl-border-radius-topleft ($value) {
  -moz-border-radius-top#{$rtl-left}: $value;
  -webkit-border-top-#{$rtl-left}-radius: $value;
  border-top-#{$rtl-left}-radius: $value;
  .lang-rtl & {
    -moz-border-radius-top#{$rtl-right}: $value;
    -webkit-border-top-#{$rtl-right}-radius: $value;
    border-top-#{$rtl-right}-radius: $value;
    -moz-border-radius-top#{$rtl-left}: inherit;
    -webkit-border-top-#{$rtl-left}-radius: inherit;
    border-top-#{$rtl-left}-radius: inherit;
  }
}

@mixin rtl-border-radius-bottomleft ($value) {
  -moz-border-radius-bottom#{$rtl-left}: $value;
  -webkit-border-bottom-#{$rtl-left}-radius: $value;
  border-bottom-#{$rtl-left}-radius: $value;
  .lang-rtl & {
    -moz-border-radius-bottom#{$rtl-right}: $value;
    -webkit-border-bottom-#{$rtl-right}-radius: $value;
    border-bottom-#{$rtl-right}-radius: $value;
    -moz-border-radius-bottom#{$rtl-left}: inherit;
    -webkit-border-bottom-#{$rtl-left}-radius: inherit;
    border-bottom-#{$rtl-left}-radius: inherit;
  }
}

//rotate
@mixin rtl-rotate ($value) {
  @include rotate($value);
  .lang-rtl & {
    @include rotate(-$value);
  }
}
//rotate 180
@mixin rtl-rotate-180 ($value) {
  @include rotateY($value);
  .lang-rtl & {
    @include rotateY($value - 180deg);
  }
}

// BORDER-RADIUS
@mixin rtl-border-radius-topright ($tl, $tr, $br, $bl) {
  -moz-border-radius: $tl, $tr, $br, $bl;
  -webkit-border-radius: $tl, $tr, $br, $bl;
  border-top-radius: $tl, $tr, $br, $bl;
  .lang-rtl & {
    -moz-border-radius: $tr, $tl, $bl, $br;
    -webkit-border-radius: $tr, $tl, $bl, $br;
    border-top-radius: $tr, $tl, $bl, $br;
  }
}

@mixin rtl-border-radius-topright ($value) {
  -moz-border-radius-top#{$rtl-right}: $value;
  -webkit-border-top-#{$rtl-right}-radius: $value;
  border-top-#{$rtl-right}-radius: $value;
  .lang-rtl & {
    -moz-border-radius-top#{$rtl-left}: $value;
    -webkit-border-top-#{$rtl-left}-radius: $value;
    border-top-#{$rtl-left}-radius: $value;
    -moz-border-radius-top#{$rtl-right}: inherit;
    -webkit-border-top-#{$rtl-right}-radius: inherit;
    border-top-#{$rtl-right}-radius: inherit;
  }
}

@mixin rtl-border-radius-bottomright ($value) {
  -moz-border-radius-bottom#{$rtl-right}: $value;
  -webkit-border-bottom-#{$rtl-right}-radius: $value;
  border-bottom-#{$rtl-right}-radius: $value;
  .lang-rtl & {
    -moz-border-radius-bottom#{$rtl-left}: $value;
    -webkit-border-bottom-#{$rtl-left}-radius: $value;
    border-bottom-#{$rtl-left}-radius: $value;
    -moz-border-radius-bottom#{$rtl-right}: inherit;
    -webkit-border-bottom-#{$rtl-right}-radius: inherit;
    border-bottom-#{$rtl-right}-radius: inherit;
  }
}

@mixin rtl-border-radius-topleft ($value) {
  -moz-border-radius-top#{$rtl-left}: $value;
  -webkit-border-top-#{$rtl-left}-radius: $value;
  border-top-#{$rtl-left}-radius: $value;
  .lang-rtl & {
    -moz-border-radius-top#{$rtl-right}: $value;
    -webkit-border-top-#{$rtl-right}-radius: $value;
    border-top-#{$rtl-right}-radius: $value;
    -moz-border-radius-top#{$rtl-left}: inherit;
    -webkit-border-top-#{$rtl-left}-radius: inherit;
    border-top-#{$rtl-left}-radius: inherit;
  }
}

@mixin rtl-border-radius-bottomleft ($value) {
  -moz-border-radius-bottom#{$rtl-left}: $value;
  -webkit-border-bottom-#{$rtl-left}-radius: $value;
  border-bottom-#{$rtl-left}-radius: $value;
  .lang-rtl & {
    -moz-border-radius-bottom#{$rtl-right}: $value;
    -webkit-border-bottom-#{$rtl-right}-radius: $value;
    border-bottom-#{$rtl-right}-radius: $value;
    -moz-border-radius-bottom#{$rtl-left}: inherit;
    -webkit-border-bottom-#{$rtl-left}-radius: inherit;
    border-bottom-#{$rtl-left}-radius: inherit;
  }
}

@mixin translate($x, $y) {
  -webkit-transform: translate($x,$y);
      -ms-transform: translate($x,$y); // IE9+
          transform: translate($x,$y);
}

@mixin translateX($x) {
  -webkit-transform: translateX($x);
      -ms-transform: translateX($x); // IE9+
          transform: translateX($x);
  .lang-rtl & {
    -webkit-transform: translateX(-$x);
      -ms-transform: translateX(-$x); // IE9+
          transform: translateX(-$x);
  }
}

@mixin translateY($y) {
  -webkit-transform: translateY($y);
      -ms-transform: translateY($y); // IE9+
          transform: translateY($y);
}

@mixin rotate3d($vector-x,$vector-y,$vector-z,$rotate) {
  -webkit-transform: rotate3d($vector-x, $vector-y, $vector-z, $rotate);
      -ms-transform: rotate3d($vector-x, $vector-y, $vector-z, $rotate);
          transform: rotate3d($vector-x, $vector-y, $vector-z, $rotate);
}

@mixin scale($x,$y) {
-webkit-transform: scale($x,$y);
      -ms-transform: scale($x,$y);
          transform: scale($x,$y);
}

@mixin rotate($y) {
  -webkit-transform: rotate($y);
      -ms-transform: rotate($y); // IE9+
          transform: rotate($y);
}

@mixin appearance($value) {
   -webkit-appearance: $value;
   -moz-appearance:    $value;
   appearance:         $value;
}

@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
     -moz-justify-content: $justify;
      -ms-justify-content: $justify;
          justify-content: $justify;
            -ms-flex-pack: $justify;
}

@mixin align-content($align) {
  -webkit-align-content: $align;
     -moz-align-content: $align;
      -ms-align-content: $align;
          align-content: $align;
}

@mixin align-items($align) {
  -webkit-align-items: $align;
     -moz-align-items: $align;
      -ms-align-items: $align;
          align-items: $align;
}

@mixin align-self($align) {
  -webkit-align-self: $align;
     -moz-align-self: $align;
      -ms-align-self: $align;
          align-self: $align;
}

@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
     -moz-flex-basis: $width;
      -ms-flex-basis: $width;
          flex-basis: $width;
}

@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
     -moz-flex-shrink: $shrink;
      -ms-flex-shrink: $shrink;
          flex-shrink: $shrink;
}
@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
     -moz-flex-grow: $grow;
      -ms-flex-grow: $grow;
          flex-grow: $grow;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;
     -moz-box-ordinal-group: $val;
         -ms-flex-order: $val;
          -webkit-order: $val;
              order: $val;
}

@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
     -moz-flex-flow: $flow;
      -ms-flex-flow: $flow;
          flex-flow: $flow;
}
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
     -moz-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
     -moz-box-flex: $values;
      -webkit-flex: $values;
      -ms-flex: $values;
          flex: $values;
}

@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
     -moz-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}

@mixin gradient-horizontal($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
  background-image: -webkit-linear-gradient(left, $start-color $start-percent, $end-color $end-percent); // Safari 5.1-6, Chrome 10+
  background-image: -o-linear-gradient(left, $start-color $start-percent, $end-color $end-percent); // Opera 12
  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=1); // IE9 and down
}

@mixin gradient-horizontal-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
  background-image: -webkit-linear-gradient(left, $start-color, $mid-color $color-stop, $end-color);
  background-image: -o-linear-gradient(left, $start-color, $mid-color $color-stop, $end-color);
  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=1); // IE9 and down, gets no color-stop at all for proper fallback
}
$color_gradient_1: {{ settings.color_gradient_1}};
$color_gradient_2: {{ settings.color_gradient_2}};
$color_gradient_3: {{ settings.color_gradient_3}};

@mixin animation($animation) {
  @include prefix(animation, #{$animation}, moz o webkit spec);
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

//Global style -----------------------------------------------------------------------------------------------------------

// slideshow

/* @media(max-width: 1199px) and (min-width: 992px) {
  .home_4 {
    .slideshow .main-slider {
      height: 394px !important;
    }
    .slideshow .slick-slide {
      height: 394px !important;
    }
  }
  .home_5 {
    .slideshow .main-slider {
      height: 400px !important;
    }
    .slideshow .slick-slide {
      height: 400px !important;
    }
  }
}
@media(max-width: 991px) and (min-width: 768px) {
  .home_2 {
    .slideshow .main-slider {
      height: 365px !important;
    }
    .slideshow .slick-slide {
      height: 365px !important;
    }
  }
  .home_4 {
    .slideshow .main-slider {
      height: 288px !important;
    }
    .slideshow .slick-slide {
      height: 288px !important;
    }
  }
  .home_5 {
    .slideshow .main-slider {
      height: 310px !important;
    }
    .slideshow .slick-slide {
      height: 310px !important;
    }
  }
} */

// Common class
.w-32 {
  @include flex(0 0 31.667%);
  max-width: 100%;
  @media (max-width: 1199px) {
    @include flex(0 0 31.2%);
    max-width: 100%;
  }
  @media (max-width: 991px) {
    @include flex(0 0 30.4%);
    max-width: 100%;
  }
  @media (max-width: 767px) {
    @include flex(0 0 100%);
    max-width: 100%;
  }
}
.w-24 {
  @include flex(0 0 24.7864%);
  max-width: 24.7864%;
  @media (max-width: 1199px) {
    @include flex(0 0 24.7%);
    max-width: 100%;
  }
  @media (max-width: 991px) {
    @include flex(0 0 30.9%);
    max-width: 100%;
  }
  @media (max-width: 767px) {
    @include flex(0 0 100%);
    max-width: 100%;
  }
}
.w-35 {
  @include flex(0 0 31.667%);
  max-width: 100%;
  margin: 0 15px;
  @media (max-width: 1199px) {
    @include flex(0 0 31.4%);
    max-width: 100%;
  }
  @media (max-width: 991px) {
    @include flex(0 0 30.95%);
    max-width: 100%;
  }
  @media (max-width: 767px) {
    @include flex(0 0 100%);
    max-width: 100%;
    margin: 15px 0;
  }
}

@media (max-width: 1199px) {
  .d-xmd-block {
    @include display(block !important);
  }
  .d-xmd-inline {
    @include display(inline-block !important);
  }
  .text-xmd-center {
    text-align: center;
  }
  .ml-xmd-auto {
    @include rtl-margin-left(auto);
  }
  .mr-xmd-auto {
    @include rtl-margin-right(auto);
  }
  .ml-xmd-auto.mr-xmd-auto {
    margin: auto;
  }
  .m-xmd-auto {
    margin: auto !important;
  }
}
@media(max-width: 991px) {
  .vertical_menu .show_sub {
    @include display(block !important);
  }
  .m-md-auto {
    margin: auto !important;
  }
}

@media (max-width: 767px) {
  .col-sm-3 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 25%;
    -ms-flex: 0 0 25%;
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-sm-4 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 33.333333%;
    -ms-flex: 0 0 33.333333%;
    flex: 0 0 33.333333%;
    max-width: 33.333333%;
  }
  .col-sm-6 {
    @include rtl-padding-left(15px);
    @include rtl-padding-right(15px);
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 50%;
    -ms-flex: 0 0 50%;
    flex: 0 0 50%;
    width: 50%;
    max-width: 50%;
  }
  .col-sm-12 {
    @include rtl-padding-left(15px);
    @include rtl-padding-right(15px);
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 100%;
    -ms-flex: 0 0 100%;
    flex: 0 0 100%;
    width: 100%;
    max-width: 100%;
  }
  .text-sm-center {
    text-align: center !important;
  }
  .flex-sm-unordered {
    -webkit-box-ordinal-group: 1;
    -webkit-order: 0;
    -ms-flex-order: 0;
    order: 0;
  }
  .flex-sm-first {
    -webkit-box-ordinal-group: 0;
    -webkit-order: -1;
    -ms-flex-order: -1;
    order: -1;
  }
  .d-sm-block {
    @include display(block !important);
  }
  .d-sm-none {
    @include display(none !important);
  }
  .justify-content-sm-center {
    -webkit-box-pack: center!important;
    -webkit-justify-content: center!important;
    -ms-flex-pack: center!important;
    justify-content: center!important;
  }
  .w-sm-100 {
    width: 100% !important;
  }
}

@media (max-width: 575px) {
  .col-xs-3 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 25%;
    -ms-flex: 0 0 25%;
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-xs-4 {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 33.333333%;
    -ms-flex: 0 0 33.333333%;
    flex: 0 0 33.333333%;
    max-width: 33.333333%;
  }
  .col-xs-6 {
    @include rtl-padding-left(15px);
    @include rtl-padding-right(15px);
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 50%;
    -ms-flex: 0 0 50%;
    flex: 0 0 50%;
    width: 50%;
    max-width: 50%;
  }
  .col-xs-12 {
    @include rtl-padding-left(15px);
    @include rtl-padding-right(15px);
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 100%;
    -ms-flex: 0 0 100%;
    flex: 0 0 100%;
    width: 100%;
    max-width: 100%;
  }
  .text-xs-center {
    text-align: center !important;
  }
  .flex-xs-unordered {
    -webkit-box-ordinal-group: 1;
    -webkit-order: 0;
    -ms-flex-order: 0;
    order: 0;
  }
  .flex-xs-first {
    -webkit-box-ordinal-group: 0;
    -webkit-order: -1;
    -ms-flex-order: -1;
    order: -1;
  }
  .d-xs-block {
  	@include display(block !important);
  }
  .d-xs-none {
    @include display(none !important);
  }
  .justify-content-xs-center {
  	-webkit-box-pack: center!important;
    -webkit-justify-content: center!important;
    -ms-flex-pack: center!important;
    justify-content: center!important;
  }
  .w-xs-100 {
    width: 100% !important;
  }
}

// Header mobile -----------------------------------------------------------------------------------------------------------
.header-mobile {
  padding: 20px;
  /* @include gradient-horizontal($color_gradient_1, $color_gradient_3); */
  background: $theme_color_default;
  @include box-shadow(0 5px 5px -3px rgba(#000,0.3));
  .item-mobile-top {
    @include square(35px);
    @include border-radius(50%);
    background: rgba(#000, 0.3);
    text-align: center;
    line-height: 35px;
    position: relative;
    cursor: pointer;
    font-size: 20px;
    i {color: #fff;}
  }
  #_mobile_menutop {
    @include square(30px);
    text-align: center;
    line-height: 30px;
    background-color: darken(#343434, 5%);
    border-radius: 50%;
    cursor: pointer;
    i {
      font-size: 21px;
    }
  }

  .mobile_logo {
    img {
      max-width: 100% !important;
    }
  }

  #mobile_search {
    margin-top: 20px;
    position: relative;
    .search__input {
      width: 100%;
      outline: none;
      border: none;
      height: 34px;
      line-height: 34px;
      font-size: 12px;
      @include rtl-padding(0,35px,0,20px);
      @include border-radius(17px);
    }
    .search__submit {
      position: absolute;
      top: 2px;
      @include rtl-right(5px);    
      .icon__fallback-text {@include display(none);}
      .site-header__search-icon {
        color: $theme-color-default;
        font-size: 21px;
      }
    }
  }
  @media (max-width: 767px) {
    #mobile_search .search__submit {
      position: absolute;
      top: 0px;
      @include rtl-right(5px);
    }
  }
}

.mobile-boxpage {
  position: fixed;
  top: 100%;
  @include rtl-left(0);
  @include rtl-right(0);
  bottom: 0;
  background: #fff;
  z-index: 1000;
  visibility: hidden;
  @include opacity(0);
  @include transition(all 0.2s);
  &.active {
    visibility: visible;
    @include opacity(1);
    top: 0;
  }
}
.content-boxpage {
  padding: 0;
  overflow-y: scroll;
  .box-header {
    height: 45px;
    background: rgba(#fff,0.95);
    @include box-shadow(0 2px 5px -2px rgba(#000,0.2));
    padding: 0 15px;
    position: relative;
    z-index: 1001;
    .title-box {
      font-family: $font-family-primary;
      font-weight: 700;
      text-transform: uppercase;
      color: #000;
      font-size: 16px;
    }
    .close-box, .back-box{
      font-size: 11px;
      color: $theme-color-default;
      font-weight: 700;
      cursor: pointer;
    }
    .back-box {
      @include display(none);
      &.active {
        @include display(block);
      }
    }
  }
  .box-content {
    overflow-y: scroll;
  }
}

#mobile-pageaccount {
  .account-list-content {
    font-size: 13px;
    i {
      @include display(none);
    }
    > div {
      padding: 15px 0;
    }
    a {
      color: #666;
    }
  }
  .links-currency,.links-language {
    font-size: 13px;
    padding: 15px 0;
    position: relative;
    cursor: pointer;
    i {
      position: absolute;
      @include rtl-right(-20px);
      top: 20px;
    }
  }
  #box-currency, #box-language {
    position: absolute;
    top: 45px;
    @include rtl-left(0);
    @include rtl-right(0);
    bottom: 0;
    visibility: hidden;
    @include opacity(0);
    @include translateX(-100%);
    @include transition(all 0.8s ease);
    background: #fff;
    &.active {
      visibility: visible;
      @include opacity(1);
      @include translateX(0);
    }
    .item-language, .item-currency {
      padding: 10px 15px;
      border-bottom: 1px dotted #eaeaea;
      position: relative;
      &.current {
        &:before {
          position: absolute;
          top: 12px;
          @include rtl-right(15px);
          content: '\f26b';
          font: normal normal normal 14px/1 'Material-Design-Iconic-Font';
          font-size: 14px;
          text-rendering: auto;
          color: $theme-color-default;
        }
      }
    }
  }
}

#_mobile_currency_selector {
  position: absolute;
  top: 50%;
  @include rtl-left(50%);
  @include translate(-50%, -50%);
  span {
    color: #666;
    @include display(block);
    padding: 5px 10px;
    &:not(:last-child) {
      border-bottom: 1px dashed #ddd;
    }
    &.selected {
      color: $theme-color-default;
    }
  }
}

#mobile-blockcart {
  #cart-info {
    @include display(block !important);padding: 10px 15px;
    .ajaxcart__product {
      &:not(:last-child) {
        margin-bottom: 10px;
      }
    }
    .btn {
      color: #fff;
    }
  }
}

#stickymenu_bottom_mobile {
  position: fixed;
  width: 100%;
  bottom: 0;
  @include rtl-left(0);
  z-index: 999;
  padding: 5px 15px;
  background: rgba(#fff,1);
  @include box-shadow(0 -2px 5px -2px rgba(#000,0.2));
  .stickymenu-item {
    width: 70px;
    a {@include display(inline-block);position: relative;}
    i {
      font-size: 23px;
      color: #bababa;
      background: transparent;
      width: auto;
      height: auto;
      margin: 0;
      vertical-align: top;
      margin-bottom: 2px;
    }
    span {
      @include display(block);
      margin-top: 0;
      font-size: 10px;
      line-height: 1;
      color: #666;
    }
    .cart-products-count {
      position: absolute;
      top: -4px;
      @include rtl-right(-10px);
      background: $theme-color-default;
      color: #fff;
      @include square(17px);
      @include border-radius(50%);
      span {@include display(none);}
      line-height: 17px;
      text-align: center;

    }
    .header-cart {
      @include display(inline-block);
      position: relative;
    }
    .title-cart {font-size: 10px;text-transform: capitalize;font-family: $font-family-default;}
    &:hover {
      a {
        color: $theme-color-default;
        text-decoration: none;
        i {
          color: $theme-color-default;
        }
      }
    }
  }
}


#_mobile_sidebarmenu_content {
  width: 230px;
}
.btn-mobile_vertical_menu {
  @include square(35px);
  color: #fff;
  text-align: center;
  line-height: 35px;
  font-size: 17px;
}

@media (max-width: 767px) {
  #_mobile_vertical_menu.vertical_menu {
    position: fixed;
    width: 250px;
    height: 100vh;
    max-height: inherit;
    overflow: auto;
    background: #fff;
    text-align: center;
    top: 0;
    @include rtl-left(-250px);
    @include transition(all 0.3s linear);
    @include opacity(0);
    z-index: 9999;
    padding: 30px 20px 70px;
    @include border-radius(0);
    border: none;
    @include display(none);
    li {
      padding: 0;
      .site-nav__dropdown {
        position: static;
        width: 100% !important;
        @include opacity(1);
        visibility: visible;
        @include border-radius(0);
        @include box-shadow(none);
        padding: 0;
        background: none !important;
        @include display(none);
        @include transition(none);
      }
    }
    .show_sub i {
      font-size: 19px;
    }
    .menuTitle.has_child {
      margin-top: 0px;
    }
    &.active {
      @include rtl-left(0);
      @include opacity(1);
    }
    &.vertical_menu .site-nav>li {
      >a {
        min-height: 46px;
        padding: 0;
        .show_sub {
          margin-top: 5px;
        }
      }
      .site-nav__dropdown {
        .site-nav__childlist-item {
          &>a {
            @include rtl-padding-left(0);
          }
          .site-nav__dropdown_three {
            .sub-menu {
              li {
                @include rtl-margin-left(20px);
                a.site-nav__link {
                  @include rtl-padding-left(0);
                }
              }
            }
          }
        }
      }
      &.site-nav--has-dropdown {
        &.hasMegaMenu {
          .novMenuLinks {
            li {
              @include rtl-margin-left(20px);
              &.menuTitle {
                @include rtl-margin-left(0px);
              }
            }
          }
        }
      }
      &:not(:last-child) {
        border-bottom: 1px solid #e6e6e6;
      }
    }
  }
  #_mobile_vertical_menu.vertical_menu.active {
    @include display(block);
  }
  .sidebar {
    margin-top: 30px;
    .title-block {
      font-size: 16px;
    }
  }
  #NovBreadcrumbs {
    margin-bottom: 30px;
    padding: 45px 0px;
    h1 {
      font-size: 18px;
      margin-bottom: 20px;
    }
  }
  .pagination {
    -webkit-box-align: center !important;
    -webkit-align-items: center !important;
    -ms-flex-align: center !important;
    align-items: center !important;
  }
  //Product detail
  .product-single__info {
    margin-top: 20px;
  }
  .group-reviews {
    font-size: 11px;
    > div:not(:last-child) {
      @include rtl-margin-right(10px);
    }
    .label-review {
      font-size: 10px;
    }
  }
  .product-single__tabs .nav-tabs {
    margin-top: 25px;
    margin-bottom: 20px;
  }
  //Blog list view
  .blog--list-view {
    .article--listing {
      @include display(block);
      > div {
        @include rtl-margin-right(0 !important);
      }
      .media-body {
        margin-top: 15px;
      }
    }
  }
  //Blog detail
  .article__thumnail {
    margin-bottom: 15px;
  }
  .article__title {
    font-size: 16px;
    margin-bottom: 10px;
  }
  .BlogRelated .title-block {
    font-size: 1.8rem;
  }
}
@media (max-width: 991px) {
  #_desktop_vertical_menu {
    ul.site-nav {
      &>li {
        &>a {
          min-height: 46px;
        }
        &:not(:last-child) {
          border-bottom: 1px solid #e6e6e6;
        }
        .site-nav__dropdown {
          .site-nav__childlist-item {
            .site-nav__dropdown_three {
              .sub-menu {
                li {
                  @include rtl-margin-left(40px);
                  a {
                    padding: 12px 0;
                  }
                }
              }
            }
          }
        }
        &.hasMegaMenu {
          .site-nav__dropdown {
            ul.novMenuLinks {
              @include rtl-margin-left(67px);
              li {
                @include rtl-margin-left(20px);
                &.menuTitle {
                  @include rtl-margin-left(0);
                }
              }
            }
          }
        }
      }
    }
  }
}